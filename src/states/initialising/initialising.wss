
state Initialising in CRandomEncounters {
  event OnEnterState(previous_state_name: name) {
    super.OnEnterState(previous_state_name);
    NLOG("Entering state Initialising");

    this.startInitialising();
  }

  entry function startInitialising() {
    NLOG("Delaying RER loading start:");

    // delay init until loading screen has stopped playing
    while (theGame.IsLoadingScreenVideoPlaying()) {
      Sleep(1);
    }

    NLOG(" - Loading screen video ended");

    // then wait until scenes are over etc...
    while (isPlayerBusy()) {
      Sleep(0.5);
    }

    NLOG(" - Player no longer busy");

    Sleep(10);

    var is_enabled: bool = theGame.GetInGameConfigWrapper().GetVarValue('RERmain', 'RERmodEnabled');
    var version: float = StringToFloat(theGame.GetInGameConfigWrapper().GetVarValue('RERmain', 'RERmodVersion'));

    if (!is_enabled && version > 0) {
      return;
    }

    this.tryApplyMenuPreset();
    this.removeAllRerMapPins();
    this.updateSettings();

    RER_loadStorageCollection(parent);

    parent.refreshModPower();
    parent.spawn_roller.fill_arrays();

    parent.bestiary.init();
    parent.bestiary.loadSettings();

    parent.settings.loadXMLSettings();
    parent.resources.load_resources();

    parent.events_manager.init(parent);
    parent.events_manager.start();

    parent.ecosystem_manager.init(parent);
    parent.bounty_manager.init(parent);
    parent.horde_manager.init(parent);
    parent.contract_manager.init(parent);
    parent.loot_manager.init(parent);

    RER_addTrackerGlossary();

    RER_tutorialTryShowStarted();
    
    NLOG("ecosystem areas storage count = " + parent.storages
      .ecosystem
      .ecosystem_areas.Size());

    #ifdef DEBUG {
      RER_toggleDebug(true);
    };

    #ifndef DEBUG {
      RER_toggleDebug(false);
    };

    parent.GotoState('Loading');
  }

  latent function updateSettings() {
    var config: CInGameConfigWrapper;
    var constants: RER_Constants;
    var current_version: float;

    config = theGame.GetInGameConfigWrapper();
    constants = RER_Constants();
    current_version = StringToFloat(config.GetVarValue('RERmain', 'RERmodVersion'));

    if (current_version < 3.05) {
      current_version = 3.05;

      config.SetVarValue('RERmain', 'RERgeneralIntensity', 100);

      NDEBUG("Random Encounters Reworked was successfully updated to v3.5");
    }

    config.SetVarValue('RERmain', 'RERmodVersion', constants.version);
    theGame.SaveUserSettings();
  }

  latent function tryApplyMenuPreset() {
    while (isPlayerBusy()) {
      Sleep(5);
    }

    Sleep(5);

    var manager: RER_PresetManager = new RER_PresetManager in this;
    manager.tryApplyMenuPreset(RER_getModMenuPreset(), parent);
    while (!manager.done) {
      SleepOneFrame();
    }
  }

  private function removeAllRerMapPins() {
    SU_removeCustomPinByPredicate(new SU_CustomPinRemoverPredicateFromRER in parent);
  }
}

